apply plugin: 'maven-publish'
apply plugin: 'signing'

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    failOnError = false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

publishing {
    publications {
        release(MavenPublication) {
            groupId "io.github.charlotteumr.jv"
            artifactId "jsonview"
            version "1.0-SNAPSHOT"
            artifact androidSourcesJar
            artifact androidJavadocsJar
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            // 配置 pom 文件格式
            pom {
                packaging = 'aar'
                name = "jsonview"
                description = "a view for displaying json"
                url = "https://github.com/Jerry-Mr-Xu/JsonView"
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Jerry'
                        name = 'Jerry'
                        email = '285373161@qq.com'
                    }
                }
                scm {
                    connection = "scm:git@github.com:Jerry-Mr-Xu/JsonView.git"
                    developerConnection = "scm:git@github.com:Jerry-Mr-Xu/JsonView.git"
                    url = "https://github.com/Jerry-Mr-Xu/JsonView"
                }
            }
        }
    }
    // 配置远程仓库
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            // You only need this if you want to publish snapshots, otherwise just set the URL
            // to the release repo directly
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            // The username and password we've fetched earlier
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}